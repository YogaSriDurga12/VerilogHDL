// Code your design here
//AXI master for data generation
module axi_stream_master( 
  input wire clk,
  input wire resetn,
  output reg tvalid,
  output reg [7:0]tdata,
  output reg tlast,
  input wire tready);
  reg [7:0]count;
  parameter start = 8'd61;
  parameter end_count = 8'd70;
  always@(posedge clk or negedge resetn) begin
    if(!resetn) begin//reset activated
      tvalid<=0;
      tdata<=0;
      tlast<=0;
      count<=start;
    end
    else begin
      tvalid<=1;//valid data available on databus
      if(tready) begin//slave is ready to accept data//
        tdata<=count;
        tlast<=(count==end_count);//last data in transaction
        if(count==end_count)//transaction reaches last data
          count<=start;
        else
          count<=count+1;
      end
    end
  end
endmodule
module axi_stream_slave(
  input wire clk,
  input wire resetn,
  input wire tvalid,
  input wire [7:0]tdata,
  input wire tlast,
  output reg tready);
  always@(posedge clk or negedge resetn) begin
    if(!resetn) 
      tready<=1;
    else
      tready<=~tready;
  end
endmodule

